<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ixchou.mappings.TContentMapper">
  <resultMap id="BaseResultMap" type="com.ixchou.model.entity.TContent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="target_id" jdbcType="INTEGER" property="targetId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ixchou.model.entity.TContent">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, is_deleted, create_time, update_time, type, target_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_content
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByTargetId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_content
    where target_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update t_content
    set is_deleted = 1
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </delete>
  <insert id="insert" parameterType="com.ixchou.model.entity.TContent">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_content (id, type, target_id, content)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{targetId,jdbcType=INTEGER},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ixchou.model.entity.TContent">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="type != null">
        type,
      </if>
      <if test="targetId != null">
        target_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ixchou.model.entity.TContent">
    update t_content
    <set>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="targetId != null">
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ixchou.model.entity.TContent">
    update t_content
    set is_deleted = #{isDeleted,jdbcType=TINYINT},
      type = #{type,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ixchou.model.entity.TContent">
    update t_content
    set is_deleted = #{isDeleted,jdbcType=TINYINT},
      type = #{type,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </update>
</mapper>